# This workflow runs HOSS regression test suite, using the tag from the workflow call.
#
# Required settings in the repository:
# Environments (exactly the following strings):
# - production
# - uat
# - sit
#
# Secrets in each environment:
# - EDL_USER
# - EDL_PASSWORD
#
# Variables in each environment:
# - HARMONY_HOST_URL
#
# Note: A workflow_call event can only have inputs of type boolean, number or
# string.
name: Run HOSS test suite

on:
  workflow_call:
    inputs:
      docker-image-tag:
        required: false
        type: string
        default: 'latest'
      harmony-environment:
        required: true
        type: string

  repository_dispatch:
    types: [hoss]
    inputs:
      docker-image-tag:
        required: false
        type: string
        default: 'latest'
      harmony-environment:
        required: true
        type: choice
        options:
          - sit
          - uat
          - production

jobs:
  hoss_job:
    environment: ${{ github.event.client_payload.harmony-environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Pull Docker image
        run: docker pull ghcr.io/nasa/regression-tests-hoss:${{ github.event.client_payload.docker-image-tag }}

      - name: Set HARMONY_HOST_URL
        run: |
          if [ "${{ github.event.client_payload.harmony-environment }}" == "uat" ]; then
            echo "HARMONY_HOST_URL=https://harmony.uat.earthdata.nasa.gov"
            echo "HARMONY_HOST_URL=https://harmony.uat.earthdata.nasa.gov" >> $GITHUB_ENV
          elif [ "${{ github.event.client_payload.harmony-environment }}" == "production" ]; then
            echo "HARMONY_HOST_URL=https://harmony.earthdata.nasa.gov"
            echo "HARMONY_HOST_URL=https://harmony.earthdata.nasa.gov" >> $GITHUB_ENV
          else
            echo "HARMONY_HOST_URL=https://harmony.sit.earthdata.nasa.gov"
            echo "HARMONY_HOST_URL=https://harmony.sit.earthdata.nasa.gov" >> $GITHUB_ENV
          fi

      - name: Execute notebook
        working-directory: ./test
        env:
          EDL_USER: ${{ secrets.EDL_USER }}
          EDL_PASSWORD: ${{ secrets.EDL_PASSWORD }}
          HARMONY_HOST_URL: ${{ env.HARMONY_HOST_URL }}
        run: ./run_notebooks.sh hoss

      - name: Save notebook as an artefact
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: notebook-output
          path: test/output/hoss/Results.ipynb

      - name: Send failure notification email
        if: failure()  # This step runs only if the previous steps fail
        uses: actions/github-script@v6
        with:
          script: |
            const nodemailer = require('nodemailer');

            let transporter = nodemailer.createTransport({
              host: process.env.SMTP_HOST,
              port: process.env.SMTP_PORT,
              secure: false,
              auth: {
                user: process.env.SMTP_USER,
                pass: process.env.SMTP_PASSWORD,
              },
            });

            let info = await transporter.sendMail({
              from: `"GitHub Actions" <${process.env.FROM_EMAIL}>`,
              to: process.env.TO_EMAIL_WORKFLOW_1,  # Using the workflow-specific email secret
              subject: `GitHub Actions Workflow 1 Failed: ${process.env.GITHUB_WORKFLOW}`,
              text: `The workflow run for ${process.env.GITHUB_REPOSITORY} on branch ${process.env.GITHUB_REF} failed.`,
              html: `<p>The workflow run for <strong>${process.env.GITHUB_REPOSITORY}</strong> on branch <strong>${process.env.GITHUB_REF}</strong> failed.</p>
                     <p>Check the details: <a href="${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}">Workflow Run</a></p>`,
            });

            console.log('Message sent: %s', info.messageId);
        env:
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
          TO_EMAIL_WORKFLOW_1: ${{ secrets.TO_EMAIL_HOSS }}  # Referencing the specific recipient email
