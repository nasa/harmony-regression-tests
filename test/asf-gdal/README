The GDAL Subsetter regression tests use a Jupyter notebook and were developed within a pipenv virtual environment.

Install pipenv:
pip install pipenv

Spawn a shell in a virtual environment:
pipenv shell

Download the github repo asf-harmony-gdal:
https://github.com/asfadmin/asf-harmony-gdal.git

Install Jupyter Notebook from within Notebooks:
pipenv install jupyter

Install dependencies from Pipfile.lock in Notebooks/gdal_subsetter_regression:

pipenv install --ignore-pipfile

For some reason numpy was not working in compare_images.py and I had to uninstall gadal and numpy then install them both with:
pip3 uninstall gdal
pip3 uninstall numpy
pip3 install numpy
pip3 install GDAL==3.0.4

Authentication:
The harmony_requests.py module uses EDL URS credentials in a .netrc file.
(For info: https://support.earthdata.nasa.gov/index.php?/Knowledgebase/Article/View/43/21/how-to-access-urs-gated-data-with-curl-and-wget)

Run Jupyter Notebook from 'Notebooks/gdal_subsetter_regression':
jupyter notebook

In the Jupyter Notebook open 'GDAL_Subsetter_Regression.ipynb'
Run the first cell to select the environment (default is uat)
Run the second cell to perform regression tests against the S1 InSAR (GRFN) collection.
Run the third cell to perform regression tests against the UAVSAR POLSAR PAULI collection.
Run the fourth cell to perform regression tests against the AVNIR-2 collection.

Program flow overview (how it all works):
1. The user selects an environment in the first cell.
2. The base harmony URL is constructed using get_base_url_info.py based on the environment selected in the first cell and the collection, which depends on which subsequent cell was run. 
3. For the chosen collection, the code in the cell loops through a list of dictionaries in <collection>_info.py. The dictionaries each contain information included in a Harmony request as well as expected values for the subsequent test assertions.
4. After each Harmony request is run, information is extracted from the resulting product metadata with get_product_info.py, a test file with assertions based on the expected results and product information is constructed with write_testfile.py or write_filetype_test.py, and pytest is used to run the tests.
5. Some file handling is conducted in order to keep the test files around for a summary run at the end of the cell, then all temporary files are removed with cleanup.py.

Reference Images:
S1_InSAR
grfn_query1_reference: subset of S1-GUNW-A-R-166-tops-20200313_20200206-014119-34455N_32574N-PP-1749-v2_0_2
grfn_query2_reference: subset of S1-GUNW-A-R-014-tops-20191127_20191115-153047-28315N_26592N-PP-8a6f-v2_0_3
grfn_query3_reference: subset of S1-GUNW-A-R-014-tops-20191127_20191115-153047-28315N_26592N-PP-8a6f-v2_0_3
grfn_query4_reference: subset of S1-GUNW-A-R-014-tops-20191127_20191115-153047-28315N_26592N-PP-8a6f-v2_0_3
grfn_query5_reference: subset of S1-GUNW-A-R-166-tops-20200313_20200206-014119-34455N_32574N-PP-1749-v2_0_2
grfn_query6_reference: subset of S1-GUNW-A-R-166-tops-20200313_20200206-014119-34455N_32574N-PP-1749-v2_0_2
grfn_query7_reference: subset of S1-GUNW-A-R-166-tops-20200313_20200206-014119-34455N_32574N-PP-1749-v2_0_2
grfn_query8_reference: subset of S1-GUNW-A-R-018-tops-20200201_20190131-232716-36003S_38134S-PP-92d7-v2_0_2
grfn_query9_reference: subset of S1-GUNW-A-R-018-tops-20200201_20190131-232716-36003S_38134S-PP-92d7-v2_0_2
grfn_query10_reference: subset of S1-GUNW-A-R-041-tops-20191123_20191030-120209-45050N_43180N-PP-0ea8-v2_0_2

UAVSAR
uavsar_query1_reference: subset of UA_djNEON_00101_17095_012_170910_L090_CX_01-PAULI 
uavsar_query2_reference: subset of UA_djNEON_00101_17095_012_170910_L090_CX_01-PAULI
uavsar_query3_reference: subset of UA_djNEON_00101_17095_012_170910_L090_CX_01-PAULI
uavsar_query4_reference: subset of UA_eelriv_06508_16103_002_161206_L090_CX_02-PAULI
uavsar_query5_reference: subset of UA_eelriv_06508_16103_002_161206_L090_CX_02-PAULI
uavsar_query6_reference: subset of UA_eighty_14047_16008_006_160225_L090_CX_01-PAULI
uavsar_query7_reference: subset of UA_kluane_01902_17064_005_170615_L090_CX_01-PAULI
uavsar_query8_reference: subset of UA_ChiVol_00700_15030_010_150330_L090_CX_01-PAULI
uavsar_query9_reference: subset of UA_gulfco_27086_16101_004_161117_L090_CX_01-PAULI
